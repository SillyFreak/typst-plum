use crate::model::{Diagram, Classifier, ClassifierKind};

// use lalrpop_util::ParseError;

grammar;

pub Diagram: Diagram<'input> = {
    <classifiers: Classifier*> => {
        Diagram { classifiers }
    }
};

Classifier: Classifier<'input> = {
    <is_abstract: "abstract"?> <is_final: "final"?> <kind: ClassifierKind> <name: Name> => {
        let (kind, stereotype) = kind;
        let is_abstract = is_abstract.is_some() || kind == ClassifierKind::Interface;
        let is_final = is_final.is_some();
        let mut stereotypes = Vec::new();
        stereotypes.extend(stereotype);
        Classifier { is_abstract, is_final, kind, name, stereotypes }
    }
};

ClassifierKind: (ClassifierKind, Option<&'input str>) = {
    "class" => (ClassifierKind::Class, None),
    "dataType" => (ClassifierKind::DataType, None),
    "enumeration" => (ClassifierKind::Enumeration, None),
    "interface" => (ClassifierKind::Interface, None),
    "primitive" => (ClassifierKind::Primitive, None),
    "annotation" => (ClassifierKind::Class, Some(<>)),
    "exception" => (ClassifierKind::Class, Some(<>)),
    "struct" => (ClassifierKind::Class, Some(<>)),
}

Name: &'input str = {
    r"[_\p{ID_Start}][_\p{ID_Continue}-]*"
};
